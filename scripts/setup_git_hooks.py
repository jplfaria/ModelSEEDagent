#!/usr/bin/env python3
"""
Setup Git Hooks for Documentation Reminders

This script sets up git hooks that provide smart reminders about
documentation updates after commits.
"""

import os
import stat
from pathlib import Path


def setup_post_commit_hook(repo_path: Path):
    """Setup post-commit hook for documentation reminders"""

    hooks_dir = repo_path / ".git" / "hooks"
    hooks_dir.mkdir(exist_ok=True)

    post_commit_hook = hooks_dir / "post-commit"

    hook_content = """#!/bin/bash
# Post-commit hook for documentation review reminders
# Auto-generated by setup_git_hooks.py

# Get the repository root
REPO_ROOT="$(git rev-parse --show-toplevel)"

# Run the reminder check
python3 "$REPO_ROOT/scripts/claude_code_cli.py" reminder

echo ""
echo "ðŸ’¡ Tip: Run './claude-code review-docs' to update documentation if needed"
echo ""
"""

    with open(post_commit_hook, "w") as f:
        f.write(hook_content)

    # Make executable
    st = os.stat(post_commit_hook)
    os.chmod(post_commit_hook, st.st_mode | stat.S_IEXEC)

    print(f"âœ… Created post-commit hook: {post_commit_hook}")


def setup_commit_msg_hook(repo_path: Path):
    """Setup commit-msg hook to detect documentation-related commits"""

    hooks_dir = repo_path / ".git" / "hooks"
    hooks_dir.mkdir(exist_ok=True)

    commit_msg_hook = hooks_dir / "commit-msg"

    hook_content = """#!/bin/bash
# Commit message hook for documentation tracking
# Auto-generated by setup_git_hooks.py

# Read commit message
COMMIT_MSG=$(cat "$1")

# Check if this is a docs update commit
if [[ "$COMMIT_MSG" == *"docs:"* ]] || [[ "$COMMIT_MSG" == *"documentation"* ]]; then
    echo "ðŸ“š Documentation commit detected - nice work keeping docs updated!"
fi
"""

    with open(commit_msg_hook, "w") as f:
        f.write(hook_content)

    # Make executable
    st = os.stat(commit_msg_hook)
    os.chmod(commit_msg_hook, st.st_mode | stat.S_IEXEC)

    print(f"âœ… Created commit-msg hook: {commit_msg_hook}")


def main():
    repo_path = Path(__file__).parent.parent

    print("ðŸ”§ Setting up git hooks for documentation reminders...")

    setup_post_commit_hook(repo_path)
    setup_commit_msg_hook(repo_path)

    print("âœ… Git hooks setup complete!")
    print("")
    print("These hooks will now:")
    print("â€¢ Show documentation review status after each commit")
    print("â€¢ Remind you to run './claude-code review-docs' when needed")
    print("â€¢ Acknowledge documentation commits")
    print("")
    print("ðŸ’¡ You can disable hooks anytime by removing files from .git/hooks/")


if __name__ == "__main__":
    main()
